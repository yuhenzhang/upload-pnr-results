CREATE SCHEMA REGRESSION_UPLOAD;
SET SCHEMA REGRESSION_UPLOAD;

-- Create dimension table for test scenarios
CREATE COLUMN TABLE TEST_SCENARIO (
    SCENARIO_ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1 NO MAXVALUE) PRIMARY KEY,
    NAME NVARCHAR(1024) NOT NULL UNIQUE,    -- e.g., "burn_in", "median", "error"
    ENTITY_TYPE NVARCHAR(1024) NOT NULL     -- "metric" (for burn-in) or "endpoint" (for regression)
);

-- Create fact table for storing metadata about each test execution (one record per Excel column)
CREATE COLUMN TABLE TEST_RUN (
    RUN_ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1 NO MAXVALUE) PRIMARY KEY,
    SCENARIO_ID BIGINT NOT NULL,
    JOB_DATE DATE NOT NULL,
    DEPLOYMENT_NAME NVARCHAR(1024) NOT NULL,
    IMAGE_NAME NVARCHAR(1024) NOT NULL,
    BUILD_NUMBER INT NOT NULL,
    JENKINS_JOB_NAME NVARCHAR(1024) NOT NULL,
    FOREIGN KEY (SCENARIO_ID) REFERENCES TEST_SCENARIO(SCENARIO_ID)
);

-- Create fact table for storing the actual test measurements (one record per Excel row in a column)
CREATE COLUMN TABLE TEST_RESULT (
    RESULT_ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1 NO MAXVALUE) PRIMARY KEY,
    RUN_ID BIGINT NOT NULL,
    ENTITY_NAME NVARCHAR(1024) NOT NULL,    -- name of metric/endpoint being measured
    DURATION_MS DOUBLE NOT NULL,            -- duration in milliseconds of the test
    FOREIGN KEY (RUN_ID) REFERENCES TEST_RUN(RUN_ID)
);

-- Create views for reporting
CREATE VIEW BURN_IN_RESULTS AS
SELECT
    r.BUILD_NUMBER,
    r.JENKINS_JOB_NAME,
    r.JOB_DATE,
    r.DEPLOYMENT_NAME,
    r.IMAGE_NAME,
    t.ENTITY_NAME AS METRIC_NAME,
    t.DURATION_MS
FROM TEST_RESULT t
JOIN TEST_RUN r ON t.RUN_ID = r.RUN_ID
JOIN TEST_SCENARIO s ON r.SCENARIO_ID = s.SCENARIO_ID
WHERE s.NAME = 'burn_in';

CREATE VIEW REGRESSION_RESULTS AS
SELECT
    r.BUILD_NUMBER,
    r.JENKINS_JOB_NAME,
    s.NAME AS SCENARIO_TYPE,
    r.JOB_DATE,
    r.DEPLOYMENT_NAME,
    r.IMAGE_NAME,
    t.ENTITY_NAME AS ENDPOINT_URI,
    t.DURATION_MS
FROM TEST_RESULT t
JOIN TEST_RUN r ON t.RUN_ID = r.RUN_ID
JOIN TEST_SCENARIO s ON r.SCENARIO_ID = s.SCENARIO_ID
WHERE s.ENTITY_TYPE = 'endpoint';